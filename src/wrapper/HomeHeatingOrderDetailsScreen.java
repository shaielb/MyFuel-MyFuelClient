package wrapper;

import java.io.IOException;
import java.sql.Timestamp;
import java.util.List;

import action.ActionControl;
import action.InsertCapability;
import annotations.AutoGenerated;
import application.Main;
import client.IClient;
import controls.MfImageView;
import controls.MfText;
import db.entity.Address;
import db.entity.Customer;
import db.entity.FuelEnum;
import db.entity.HomeHeatingOrder;
import db.entity.OrderUrgencyEnum;
import db.entity.Payment;
import db.entity.Person;
import db.interfaces.IEntity;
import handler.UiHandler;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.image.ImageView;
import javafx.scene.text.Text;
import messages.request.IUpdate;
import sceneswitch.Context;
import sceneswitch.ISceneSwitcher;
import sceneswitch.SceneBase;

@AutoGenerated
public class HomeHeatingOrderDetailsScreen extends SceneBase {
	
	private static String HomeHeating = "HomeHeating";

	private HomeHeatingOrder _homeHeatingOrder;
	private OrderUrgencyEnum _orderUrgencyEnum;
	private Customer _customer;
	private Payment _payment;
	private Person _person;
	private Address _address;

	private MfImageView _insertHomeHeatingOrderControl;
	private ActionControl _homeHeatingOrderinsertAction;
	private MfImageView _homeHeatingNewOrderScreenControl;
	private MfText _amountControl;
	private MfText _orderUrgencyKeyControl;
	private MfText _totalPriceControl;
	private MfText _orderTimeControl;
	private MfText _creditCardNumberControl;
	private MfText _firstNameControl;
	private MfText _lastNameControl;
	private MfText _cityControl;
	private MfText _streetControl;
	private MfText _apartmentControl;
	private MfText _savedControl;

	public HomeHeatingOrderDetailsScreen(ISceneSwitcher sceneSwitcher, IClient client, Context context) throws Exception {
		super(sceneSwitcher, client, context);
	}

	@Override
	public void initialize() throws Exception {
		Parent root = FXMLLoader.load(Main.class.getResource("HomeHeatingOrderDetailsScreen.fxml"));
		_scene = new Scene(root);

		//scene switchers
		_homeHeatingNewOrderScreenControl = new MfImageView((ImageView) _scene.lookup("#scene$HomeHeatingNewOrderScreen"));
		_homeHeatingNewOrderScreenControl.addEvent((event) -> { _switcher.switchScene("HomeHeatingNewOrderScreen"); });

		//entities instantiation
		if (_homeHeatingOrder == null) {
			_homeHeatingOrder = new HomeHeatingOrder();
		}
		if (_orderUrgencyEnum == null) {
			_orderUrgencyEnum = _homeHeatingOrder.getOrderUrgencyEnum();
		}
		if (_customer == null) {
			_customer = _homeHeatingOrder.getCustomer();
		}
		if (_payment == null) {
			_payment = _customer.getPayment();
		}
		if (_person == null) {
			_person = _customer.getPerson();
		}
		if (_address == null) {
			_address = _customer.getAddress();
		}

		//controls instantiation
		_amountControl = new MfText((Text) _scene.lookup("#table$home_heating_order$amount"));
		_orderUrgencyKeyControl = new MfText((Text) _scene.lookup("#table$home_heating_order$order_urgency_enum$order_urgency_key"));
		_totalPriceControl = new MfText((Text) _scene.lookup("#table$home_heating_order$total_price"));
		_orderTimeControl = new MfText((Text) _scene.lookup("#table$home_heating_order$order_time"));
		_creditCardNumberControl = new MfText((Text) _scene.lookup("#table$home_heating_order$customer$payment$credit_card_number"));
		_firstNameControl = new MfText((Text) _scene.lookup("#table$home_heating_order$customer$person$first_name"));
		_lastNameControl = new MfText((Text) _scene.lookup("#table$home_heating_order$customer$person$last_name"));
		_cityControl = new MfText((Text) _scene.lookup("#table$home_heating_order$customer$address$city"));
		_streetControl = new MfText((Text) _scene.lookup("#table$home_heating_order$customer$address$street"));
		_apartmentControl = new MfText((Text) _scene.lookup("#table$home_heating_order$customer$address$apartment"));
		_savedControl = new MfText((Text) _scene.lookup("#table$home_heating_order$saved"));

		//initializations
		_insertHomeHeatingOrderControl = new MfImageView((ImageView) _scene.lookup("#action$insert$home_heating_order"));
		_insertHomeHeatingOrderControl.
		setMouseImages("@resource/images/Confirm_btn.jpg", "@resource/images/Confirm_overbtn.png", "@resource/images/Confirm_clickbtn.png");
		_homeHeatingOrderinsertAction = new ActionControl();
		_homeHeatingOrderinsertAction.setControl(_insertHomeHeatingOrderControl);
		InsertCapability homeHeatingOrderInsertCapability = new InsertCapability();
		homeHeatingOrderInsertCapability.addEntity(_homeHeatingOrder);
		_homeHeatingOrderinsertAction.addCapability(homeHeatingOrderInsertCapability);
		_homeHeatingOrderinsertAction.setClient(_client);
		_homeHeatingOrderinsertAction.setPreSend((request) -> {
			_homeHeatingOrder.setOrderTime(new Timestamp(System.currentTimeMillis()));
			_homeHeatingOrder.setOrderStatus("In process");
			return true;
		});
		_homeHeatingOrderinsertAction.setCallback((response) -> {
			if (!response.isPassed()) {
				UiHandler.showAlert(AlertType.ERROR, "Submition Issue", "", 
						response.getDescription());
			}
			else {
				List<IEntity> entities = response.getEntitiesAsList();
				HomeHeatingOrder hho = (HomeHeatingOrder) entities.get(0);
				UiHandler.showAlert(AlertType.INFORMATION, "Order Submition", "", 
						"Your Order Was Submited, Order Id: ");
				IUpdate updateRequest = _client.getUpdateRequest();
				updateRequest.addEntity(hho);
				try {
					_client.sendRequest(updateRequest);
				} catch (IOException e) {
					e.printStackTrace();
				}
				_switcher.switchScene("HomeHeatingNewOrderScreen");
			}
		});

		Double amount = _homeHeatingOrder.getAmount();
		Double maxPrice = _client.getEnum(FuelEnum.class, HomeHeating).getMaxPricePerType();
		Double result = (maxPrice * amount) - _homeHeatingOrder.getTotalPrice();
		if (result < 0) {
			result = 0d;
		}
		String resultStr = result.toString();
		if (resultStr.contains(".")) {
			resultStr = resultStr.substring(0, resultStr.lastIndexOf(".") + 2);
		}
		((Text)_savedControl.getInstance()).setText(resultStr);

		_homeHeatingOrder.setOrderTime(new Timestamp(System.currentTimeMillis()));

		//fields initializations
		_amountControl.setField(_homeHeatingOrder.getClass().getDeclaredField("_amount"));
		_amountControl.setEntity(_homeHeatingOrder);

		_orderUrgencyKeyControl.setField(_orderUrgencyEnum.getClass().getDeclaredField("_order_urgency_key"));
		_orderUrgencyKeyControl.setEntity(_orderUrgencyEnum);

		_totalPriceControl.setField(_homeHeatingOrder.getClass().getDeclaredField("_total_price"));
		_totalPriceControl.setEntity(_homeHeatingOrder);

		_orderTimeControl.setField(_homeHeatingOrder.getClass().getDeclaredField("_order_time"));
		_orderTimeControl.setEntity(_homeHeatingOrder);

		_creditCardNumberControl.setField(_payment.getClass().getDeclaredField("_credit_card_number"));
		_creditCardNumberControl.setEntity(_payment);

		_firstNameControl.setField(_person.getClass().getDeclaredField("_first_name"));
		_firstNameControl.setEntity(_person);

		_lastNameControl.setField(_person.getClass().getDeclaredField("_last_name"));
		_lastNameControl.setEntity(_person);

		_cityControl.setField(_address.getClass().getDeclaredField("_city"));
		_cityControl.setEntity(_address);

		_streetControl.setField(_address.getClass().getDeclaredField("_street"));
		_streetControl.setEntity(_address);

		_apartmentControl.setField(_address.getClass().getDeclaredField("_apartment"));
		_apartmentControl.setEntity(_address);
	}

	@Override
	protected void onLoad() {

	}

	@Override
	public void setParameters(IEntity[] entities) {
		super.setParameters(entities);
		_homeHeatingOrder = (HomeHeatingOrder) entities[0];
	}


	public HomeHeatingOrder getHomeHeatingOrder() {
		return _homeHeatingOrder;
	}

	public void setHomeHeatingOrder(HomeHeatingOrder homeHeatingOrder) {
		_homeHeatingOrder = homeHeatingOrder;
	}

	public OrderUrgencyEnum getOrderUrgencyEnum() {
		return _orderUrgencyEnum;
	}

	public void setOrderUrgencyEnum(OrderUrgencyEnum orderUrgencyEnum) {
		_orderUrgencyEnum = orderUrgencyEnum;
	}

	public Customer getCustomer() {
		return _customer;
	}

	public void setCustomer(Customer customer) {
		_customer = customer;
	}

	public Payment getPayment() {
		return _payment;
	}

	public void setPayment(Payment payment) {
		_payment = payment;
	}

	public Person getPerson() {
		return _person;
	}

	public void setPerson(Person person) {
		_person = person;
	}

	public Address getAddress() {
		return _address;
	}

	public void setAddress(Address address) {
		_address = address;
	}
}
