package wrapper;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import action.ActionControl;
import action.FilterCapability;
import action.InsertCapability;
import adapter.base.ControlAdapter;
import annotations.AutoGenerated;
import application.Main;
import client.IClient;
import controls.MfComboBox;
import controls.MfImageView;
import controls.MfText;
import db.entity.FuelEnum;
import db.entity.Station;
import db.entity.StationManagerReports;
import db.entity.StationSupplyOrder;
import db.interfaces.IEntity;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.ComboBox;
import javafx.scene.image.ImageView;
import javafx.scene.text.Text;
import messages.QueryContainer;
import sceneswitch.Context;
import sceneswitch.ISceneSwitcher;
import sceneswitch.SceneBase;

@AutoGenerated
public class ExpenseReportScreen extends SceneBase {

	private StationManagerReports _stationManagerReportsBenzinAmount;
	private FuelEnum _fuelEnum;
	private StationManagerReports _stationManagerReportsSolerAmount;
	private StationManagerReports _stationManagerReportsMotorcyclesAmount;
	private StationManagerReports _stationManagerReportsBenzinPrice;
	private StationManagerReports _stationManagerReportsSolerPrice;
	private StationManagerReports _stationManagerReportsMotorcyclesPrice;
	private StationManagerReports _stationManagerReports;
	private Station _station;
	private StationSupplyOrder _stationSupplyOrder;

	private MfImageView _mainMenuStationManagerScreenControl;
	private MfText _amountControlBenzinAmount;
	private MfText _amountControlSolerAmount;
	private MfText _amountControlMotorcyclesAmount;
	private MfText _priceControlBenzinPrice;
	private MfText _priceControlSolerPrice;
	private MfText _priceControlMotorcyclesPrice;
	private MfText _stationNameControl;
	private MfImageView _filterStationSupplyOrderControl;
	private ActionControl _stationSupplyOrderfilterAction;
	private MfComboBox _reportYearControl;
	private MfComboBox _reportQuarterControl;
	private MfImageView _insertStationManagerReportsControl;
	private ActionControl _stationManagerReportsinsertAction;

	public ExpenseReportScreen(ISceneSwitcher sceneSwitcher, IClient client, Context context) throws Exception {
		super(sceneSwitcher, client, context);
	}

	@Override
	public void initialize() throws Exception {
		Parent root = FXMLLoader.load(Main.class.getResource("ExpenseReportScreen.fxml"));
		_scene = new Scene(root);

		//scene switchers
		_mainMenuStationManagerScreenControl = new MfImageView((ImageView) _scene.lookup("#scene$MainMenuStationManagerScreen"));
		_mainMenuStationManagerScreenControl.addEvent((event) -> { _switcher.switchScene("MainMenuStationManagerScreen"); });

		//entities instantiation
		if (_stationManagerReportsBenzinAmount == null) {
			_stationManagerReportsBenzinAmount = new StationManagerReports();
		}
		if (_fuelEnum == null) {
			_fuelEnum = new FuelEnum();
		}
		if (_stationManagerReportsSolerAmount == null) {
			_stationManagerReportsSolerAmount = new StationManagerReports();
		}
		if (_stationManagerReportsMotorcyclesAmount == null) {
			_stationManagerReportsMotorcyclesAmount = new StationManagerReports();
		}
		if (_stationManagerReportsBenzinPrice == null) {
			_stationManagerReportsBenzinPrice = new StationManagerReports();
		}
		if (_stationManagerReportsSolerPrice == null) {
			_stationManagerReportsSolerPrice = new StationManagerReports();
		}
		if (_stationManagerReportsMotorcyclesPrice == null) {
			_stationManagerReportsMotorcyclesPrice = new StationManagerReports();
		}
		if (_stationManagerReports == null) {
			_stationManagerReports = new StationManagerReports();
		}
		if (_station == null) {
			_station = new Station();
		}
		if (_stationSupplyOrder == null) {
			_stationSupplyOrder = new StationSupplyOrder();
		}

		//entities assignments
		_stationManagerReportsBenzinAmount.setFuelEnum(_fuelEnum);
		_stationManagerReportsSolerAmount.setFuelEnum(_fuelEnum);
		_stationManagerReportsMotorcyclesAmount.setFuelEnum(_fuelEnum);
		_stationManagerReportsBenzinPrice.setFuelEnum(_fuelEnum);
		_stationManagerReportsSolerPrice.setFuelEnum(_fuelEnum);
		_stationManagerReportsMotorcyclesPrice.setFuelEnum(_fuelEnum);
		_stationManagerReports.setStation(_station);

		//controls instantiation
		_amountControlBenzinAmount = new MfText((Text) _scene.lookup("#table$station_manager_reports$fuel_enum$$$benzin$amount"));
		_amountControlSolerAmount = new MfText((Text) _scene.lookup("#table$station_manager_reports$fuel_enum$$$soler$amount"));
		_amountControlMotorcyclesAmount = new MfText((Text) _scene.lookup("#table$station_manager_reports$fuel_enum$$$motorcycles$amount"));
		_priceControlBenzinPrice = new MfText((Text) _scene.lookup("#table$station_manager_reports$fuel_enum$$$benzin$price"));
		_priceControlSolerPrice = new MfText((Text) _scene.lookup("#table$station_manager_reports$fuel_enum$$$soler$price"));
		_priceControlMotorcyclesPrice = new MfText((Text) _scene.lookup("#table$station_manager_reports$fuel_enum$$$motorcycles$price"));
		_stationNameControl = new MfText((Text) _scene.lookup("#table$station_manager_reports$station$station_name"));
		_reportYearControl = new MfComboBox((ComboBox) _scene.lookup("#table$station_manager_reports$report_year"));
		_reportQuarterControl = new MfComboBox((ComboBox) _scene.lookup("#table$station_manager_reports$report_quarter"));

		//initializations
		_filterStationSupplyOrderControl = new MfImageView((ImageView) _scene.lookup("#action$collect$station_supply_order"));
		_filterStationSupplyOrderControl.
			setMouseImages("@resource/images/SmallSearch_btn.png", "@resource/images/SmallSearch_overbtn.png", "@resource/images/SmallSearch_clickbtn.png");
		_stationSupplyOrderfilterAction = new ActionControl();
		_stationSupplyOrderfilterAction.setControl(_filterStationSupplyOrderControl);
		FilterCapability stationSupplyOrderFilterCapability = new FilterCapability();
		stationSupplyOrderFilterCapability.setQueryContainers(prepareQuery(_stationSupplyOrder));
		_stationSupplyOrderfilterAction.addCapability(stationSupplyOrderFilterCapability);
		_stationSupplyOrderfilterAction.setClient(_client);
		_stationSupplyOrderfilterAction.setPreSend((request) -> {

			return true;
		});
		_stationSupplyOrderfilterAction.setCallback((response) -> {
			Collection<IEntity> entities = response.getEntities();
			for (IEntity ientity : entities) {
				StationSupplyOrder entity = (StationSupplyOrder) ientity;
			}
		});

		_insertStationManagerReportsControl = new MfImageView((ImageView) _scene.lookup("#action$insert$station_manager_reports"));
		_insertStationManagerReportsControl.
			setMouseImages("@resource/images/ProduceReport_btn.png", "@resource/images/ProduceReport_overbtn.png", "@resource/images/ProduceReport_clickbtn.png");
		_stationManagerReportsinsertAction = new ActionControl();
		_stationManagerReportsinsertAction.setControl(_insertStationManagerReportsControl);
		InsertCapability stationManagerReportsInsertCapability = new InsertCapability();
		stationManagerReportsInsertCapability.addEntity(_stationManagerReports);
		_stationManagerReportsinsertAction.addCapability(stationManagerReportsInsertCapability);
		_stationManagerReportsinsertAction.setClient(_client);
		_stationManagerReportsinsertAction.setPreSend((request) -> {

			return true;
		});
		_stationManagerReportsinsertAction.setCallback((response) -> {
			
		});

		//fields initializations
		_amountControlBenzinAmount.setField(_stationManagerReportsBenzinAmount.getClass().getDeclaredField("_amount"));
		_amountControlBenzinAmount.setEntity(_stationManagerReportsBenzinAmount);

		_amountControlSolerAmount.setField(_stationManagerReportsSolerAmount.getClass().getDeclaredField("_amount"));
		_amountControlSolerAmount.setEntity(_stationManagerReportsSolerAmount);

		_amountControlMotorcyclesAmount.setField(_stationManagerReportsMotorcyclesAmount.getClass().getDeclaredField("_amount"));
		_amountControlMotorcyclesAmount.setEntity(_stationManagerReportsMotorcyclesAmount);

		_priceControlBenzinPrice.setField(_stationManagerReportsBenzinPrice.getClass().getDeclaredField("_price"));
		_priceControlBenzinPrice.setEntity(_stationManagerReportsBenzinPrice);

		_priceControlSolerPrice.setField(_stationManagerReportsSolerPrice.getClass().getDeclaredField("_price"));
		_priceControlSolerPrice.setEntity(_stationManagerReportsSolerPrice);

		_priceControlMotorcyclesPrice.setField(_stationManagerReportsMotorcyclesPrice.getClass().getDeclaredField("_price"));
		_priceControlMotorcyclesPrice.setEntity(_stationManagerReportsMotorcyclesPrice);

		_stationNameControl.setField(_station.getClass().getDeclaredField("_station_name"));
		_stationNameControl.setEntity(_station);

		_reportYearControl.setField(_stationManagerReports.getClass().getDeclaredField("_report_year"));
		_reportYearControl.setEntity(_stationManagerReports);

		_reportQuarterControl.setField(_stationManagerReports.getClass().getDeclaredField("_report_quarter"));
		_reportQuarterControl.setEntity(_stationManagerReports);

		//grouping
		groupControls(new ControlAdapter[] { _amountControlBenzinAmount, _amountControlSolerAmount, _amountControlMotorcyclesAmount });
		groupControls(new ControlAdapter[] { _priceControlBenzinPrice, _priceControlSolerPrice, _priceControlMotorcyclesPrice });

	}

	@Override
	protected void onLoad() {
		
	}

	@Override
	public void setParameters(IEntity[] entities) {
		super.setParameters(entities);
	}

	private List<QueryContainer> prepareQuery(StationSupplyOrder stationSupplyOrder) {
		List<QueryContainer> containers = new ArrayList<QueryContainer>();
		
		Map<String, String> queryMap = new HashMap<String, String>();
		
		QueryContainer container = new QueryContainer();
		container.setQueryEntity(stationSupplyOrder);
		container.setQueryMap(queryMap);
		containers.add(container);
		return containers;
	}

	public StationManagerReports getStationManagerReportsBenzinAmount() {
		 return _stationManagerReportsBenzinAmount;
	}

	public void setStationManagerReportsBenzinAmount(StationManagerReports stationManagerReportsBenzinAmount) {
		 _stationManagerReportsBenzinAmount = stationManagerReportsBenzinAmount;
	}

	public FuelEnum getFuelEnum() {
		 return _fuelEnum;
	}

	public void setFuelEnum(FuelEnum fuelEnum) {
		 _fuelEnum = fuelEnum;
	}

	public StationManagerReports getStationManagerReportsSolerAmount() {
		 return _stationManagerReportsSolerAmount;
	}

	public void setStationManagerReportsSolerAmount(StationManagerReports stationManagerReportsSolerAmount) {
		 _stationManagerReportsSolerAmount = stationManagerReportsSolerAmount;
	}

	public StationManagerReports getStationManagerReportsMotorcyclesAmount() {
		 return _stationManagerReportsMotorcyclesAmount;
	}

	public void setStationManagerReportsMotorcyclesAmount(StationManagerReports stationManagerReportsMotorcyclesAmount) {
		 _stationManagerReportsMotorcyclesAmount = stationManagerReportsMotorcyclesAmount;
	}

	public StationManagerReports getStationManagerReportsBenzinPrice() {
		 return _stationManagerReportsBenzinPrice;
	}

	public void setStationManagerReportsBenzinPrice(StationManagerReports stationManagerReportsBenzinPrice) {
		 _stationManagerReportsBenzinPrice = stationManagerReportsBenzinPrice;
	}

	public StationManagerReports getStationManagerReportsSolerPrice() {
		 return _stationManagerReportsSolerPrice;
	}

	public void setStationManagerReportsSolerPrice(StationManagerReports stationManagerReportsSolerPrice) {
		 _stationManagerReportsSolerPrice = stationManagerReportsSolerPrice;
	}

	public StationManagerReports getStationManagerReportsMotorcyclesPrice() {
		 return _stationManagerReportsMotorcyclesPrice;
	}

	public void setStationManagerReportsMotorcyclesPrice(StationManagerReports stationManagerReportsMotorcyclesPrice) {
		 _stationManagerReportsMotorcyclesPrice = stationManagerReportsMotorcyclesPrice;
	}

	public StationManagerReports getStationManagerReports() {
		 return _stationManagerReports;
	}

	public void setStationManagerReports(StationManagerReports stationManagerReports) {
		 _stationManagerReports = stationManagerReports;
	}

	public Station getStation() {
		 return _station;
	}

	public void setStation(Station station) {
		 _station = station;
	}
}
