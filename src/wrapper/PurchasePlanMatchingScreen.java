package wrapper;

import javafx.scene.layout.BorderPane;
import javafx.fxml.FXMLLoader;
import db.entity.*;
import adapter.base.ControlAdapter;
import java.util.HashSet;
import widgets.table.Table;
import application.Main;
import controls.*;
import annotations.AutoGenerated;
import java.util.HashMap;
import javafx.scene.Parent;
import sceneswitch.SceneBase;
import java.util.Map;
import java.util.Collection;
import table.MfTable;
import widgets.table.*;
import client.IClient;

import javafx.scene.Scene;
import javafx.scene.control.*;
import action.*;
import db.interfaces.IEntity;
import javafx.scene.image.ImageView;
import java.util.Set;
import javafx.scene.text.Text;

@AutoGenerated
public class PurchasePlanMatchingScreen extends SceneBase {

	public PurchasePlanMatchingScreen(ISceneSwitcher sceneSwitcher, IClient client) throws Exception {
		super(sceneSwitcher, client);
		initialize();
	}

	public void initialize() throws Exception {
		Parent root = FXMLLoader.load(Main.class.getResource("PurchasePlanMatchingScreen.fxml"));
		_scene = new Scene(root);

		//scene switchers
		MfImageView mainMenuMarketingScreenControl = new MfImageView((ImageView) _scene.lookup("#scene$MainMenuMarketingScreen"));
		mainMenuMarketingScreenControl.addEvent((event) -> { _switcher.switchScene("MainMenuMarketingScreen"); });

		//entities instantiation
		Customer customer = new Customer();
		SubscriptionPlan subscriptionPlan = new SubscriptionPlan();
		FuelCompanyEnum fuelCompanyEnum = new FuelCompanyEnum();
		SubscriptionPlanRatesEnum subscriptionPlanRatesEnum = new SubscriptionPlanRatesEnum();
		Person person = new Person();

		//entities assignments
		subscriptionPlan.setFuelCompanyEnum(fuelCompanyEnum);
		subscriptionPlan.setSubscriptionPlanRatesEnum(subscriptionPlanRatesEnum);
		customer.setPerson(person);

		//controls instantiation
		MfTextField customerIdControl = new MfTextField((TextField) _scene.lookup("#table$customer$customer_id"));
		MfComboBox companyNameKeyControlCmb = new MfComboBox((ComboBox) _scene.lookup("#table$subscription_plan$fuel_company_enum$company_name_key$$$cmb"));
		MfText companyNameKeyControlTxt1 = new MfText((Text) _scene.lookup("#table$subscription_plan$fuel_company_enum$company_name_key$$$txt1"));
		MfText companyNameKeyControlTxt2 = new MfText((Text) _scene.lookup("#table$subscription_plan$fuel_company_enum$company_name_key$$$txt2"));
		MfText companyNameKeyControlTxt3 = new MfText((Text) _scene.lookup("#table$subscription_plan$fuel_company_enum$company_name_key$$$txt3"));
		MfComboBox companyNameKeyControlCmb1 = new MfComboBox((ComboBox) _scene.lookup("#table$subscription_plan$fuel_company_enum$company_name_key$$$cmb1"));
		MfComboBox companyNameKeyControlCmb2 = new MfComboBox((ComboBox) _scene.lookup("#table$subscription_plan$fuel_company_enum$company_name_key$$$cmb2"));
		MfText planTypeKeyControl = new MfText((Text) _scene.lookup("#table$subscription_plan$subscription_plan_rates_enum$plan_type_key"));
		MfText firstNameControl = new MfText((Text) _scene.lookup("#table$customer$person$first_name"));
		MfText emailControl = new MfText((Text) _scene.lookup("#table$customer$person$email"));
		MfText phoneNumberControl = new MfText((Text) _scene.lookup("#table$customer$person$phone_number"));

		//initializations
		MfImageView filterCustomerControl = new MfImageView((ImageView) _scene.lookup("#action$collect$customer"));
		ActionControl customerfilterAction = new ActionControl();
		customerfilterAction.setControl(filterCustomerControl);
		FilterCapability customerFilterCapability = new FilterCapability();
		customerFilterCapability.setQueryEntities(prepareQuery(customer));
		customerfilterAction.addCapability(customerFilterCapability);
		customerfilterAction.setClient(_client);
		customerfilterAction.setCallback((response) -> {
			Collection<IEntity> entities = response.getEntities();
			for (IEntity ientity : entities) {
				Customer entity = (Customer) ientity;
			}
		});

		MfImageView updateSubscriptionPlanControl = new MfImageView((ImageView) _scene.lookup("#action$update$subscription_plan"));
		ActionControl subscriptionPlanupdateAction = new ActionControl();
		subscriptionPlanupdateAction.setControl(updateSubscriptionPlanControl);
		UpdateCapability subscriptionPlanUpdateCapability = new UpdateCapability();
		Set<IEntity> subscriptionPlanUpdateEntities = new HashSet<IEntity>();
		subscriptionPlanUpdateCapability.setEntities(subscriptionPlanUpdateEntities);
		subscriptionPlanupdateAction.addCapability(subscriptionPlanUpdateCapability);
		subscriptionPlanupdateAction.setClient(_client);
		subscriptionPlanupdateAction.setCallback((response) -> {
			
		});

		//fields initializations
		customerIdControl.setField(customer.getClass().getDeclaredField("_customer_id"));
		customerIdControl.setEntity(customer);

		companyNameKeyControlCmb.setField(fuelCompanyEnum.getClass().getDeclaredField("_company_name_key"));
		companyNameKeyControlCmb.setEntity(fuelCompanyEnum);

		companyNameKeyControlTxt1.setField(fuelCompanyEnum.getClass().getDeclaredField("_company_name_key"));
		companyNameKeyControlTxt1.setEntity(fuelCompanyEnum);

		companyNameKeyControlTxt2.setField(fuelCompanyEnum.getClass().getDeclaredField("_company_name_key"));
		companyNameKeyControlTxt2.setEntity(fuelCompanyEnum);

		companyNameKeyControlTxt3.setField(fuelCompanyEnum.getClass().getDeclaredField("_company_name_key"));
		companyNameKeyControlTxt3.setEntity(fuelCompanyEnum);

		companyNameKeyControlCmb1.setField(fuelCompanyEnum.getClass().getDeclaredField("_company_name_key"));
		companyNameKeyControlCmb1.setEntity(fuelCompanyEnum);

		companyNameKeyControlCmb2.setField(fuelCompanyEnum.getClass().getDeclaredField("_company_name_key"));
		companyNameKeyControlCmb2.setEntity(fuelCompanyEnum);

		planTypeKeyControl.setField(subscriptionPlanRatesEnum.getClass().getDeclaredField("_plan_type_key"));
		planTypeKeyControl.setEntity(subscriptionPlanRatesEnum);

		firstNameControl.setField(person.getClass().getDeclaredField("_first_name"));
		firstNameControl.setEntity(person);

		emailControl.setField(person.getClass().getDeclaredField("_email"));
		emailControl.setEntity(person);

		phoneNumberControl.setField(person.getClass().getDeclaredField("_phone_number"));
		phoneNumberControl.setEntity(person);

		//grouping
		groupControls(new ControlAdapter[] { companyNameKeyControlCmb, companyNameKeyControlTxt1, companyNameKeyControlTxt2, companyNameKeyControlTxt3, companyNameKeyControlCmb1, companyNameKeyControlCmb2 });

	}
	private Map<IEntity, Map<String, String>> prepareQuery(Customer customer) {
		Map<IEntity, Map<String, String>> map = new HashMap<IEntity, Map<String, String>>();
		
		Map<String, String> queryMap = new HashMap<String, String>();
		
		map.put(customer, queryMap);
		return map;
	}
}
