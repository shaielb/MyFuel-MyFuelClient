package wrapper;

import javafx.scene.layout.BorderPane;
import javafx.fxml.FXMLLoader;
import adapter.base.ControlAdapter;
import java.util.HashSet;
import widgets.table.Table;
import controls.*;
import annotations.AutoGenerated;
import java.util.HashMap;
import javafx.scene.Parent;
import sceneswitch.SceneBase;
import table.MfTable;
import widgets.table.*;
import javafx.scene.Scene;
import javafx.scene.control.*;
import action.*;
import db.interfaces.IEntity;
import javafx.scene.image.ImageView;
import java.util.Set;
import javafx.scene.text.Text;

@AutoGenerated
public class PurchasePlanMatchingScreen extends SceneBase {

	public PurchasePlanMatchingScreen(ISceneSwitcher sceneSwitcher) {
		super(sceneSwitcher);
	}

	public void initialize() {
		Parent root = FXMLLoader.load(getClass().getResource("PurchasePlanMatchingScreen.fxml"));
		_scene = new Scene(root);

		//entities instantiation
		Customer customer = new Customer();
		FuelCompany fuelCompany = new FuelCompany();
		SubscriptionPlan subscriptionPlan = new SubscriptionPlan();
		SubscriptionPlanRates subscriptionPlanRates = new SubscriptionPlanRates();

		//controls instantiation
		MfTextField customerIdControl = new MfTextField((TextField) _scene.lookup("#table$customer$customer_id"));
		MfComboBox nameControl = new MfComboBox((ComboBox) _scene.lookup("#table$fuel_company$name"));
		MfToggleButton typeControlMulti = new MfToggleButton((ToggleButton) _scene.lookup("#table$customer$subscription_plan$subscription_plan_rates$type$$multi"));
		MfToggleButton typeControlSingle = new MfToggleButton((ToggleButton) _scene.lookup("#table$customer$subscription_plan$subscription_plan_rates$type$$single"));

		//initializations
		MfHyperlink mainMenuMarketingScreenControl = new MfHyperlink((Hyperlink) _scene.lookup("#scene$MainMenuMarketingScreen"));
		mainMenuMarketingScreenControl.addEvent((event) -> { _switcher.switchScene("MainMenuMarketingScreen"); });
		MfImageView mainMenuMarketingScreenControl = new MfImageView((ImageView) _scene.lookup("#scene$MainMenuMarketingScreen"));
		mainMenuMarketingScreenControl.addEvent((event) -> { _switcher.switchScene("MainMenuMarketingScreen"); });
		customer.setSubscriptionPlan(subscriptionPlan);
		subscriptionPlan.setSubscriptionPlanRates(subscriptionPlanRates);
		MfImageView customerControl = new MfImageView((ImageView) _scene.lookup("#action$filter$customer"));
		ActionControl filterAction = new ActionControl();
		filterAction.setControl(customerControl);
		FilterCapability customerFilterCapability = new FilterCapability();
		customerFilterCapability.setQueryEntity(customer, null);
		filterAction.addCapability(customerFilterCapability);
		filterAction.setCallback((response) -> {});
		MfImageView subscriptionPlanControl = new MfImageView((ImageView) _scene.lookup("#action$update$customer$subscription_plan"));
		ActionControl updateAction = new ActionControl();
		updateAction.setControl(subscriptionPlanControl);
		UpdateCapability subscriptionPlanUpdateCapability = new UpdateCapability();
		Set<IEntity> subscriptionPlanUpdateEntities = new HashSet<IEntity>();
		subscriptionPlanUpdateCapability.setEntities(subscriptionPlanUpdateEntities);
		updateAction.addCapability(subscriptionPlanUpdateCapability);
		updateAction.setCallback((response) -> {});

		//fields initializations
		customerIdControl.setField(customer.getClass().getField("_customer_id"));
		customerIdControl.setEntity(customer);

		nameControl.setField(fuelCompany.getClass().getField("_name"));
		nameControl.setEntity(fuelCompany);

		typeControlMulti.setField(subscriptionPlanRates.getClass().getField("_type"));
		typeControlMulti.setEntity(subscriptionPlanRates);

		typeControlSingle.setField(subscriptionPlanRates.getClass().getField("_type"));
		typeControlSingle.setEntity(subscriptionPlanRates);

		//grouping
		groupControls(new ControlAdapter[] { typeControlMulti, typeControlSingle });
	}

}
