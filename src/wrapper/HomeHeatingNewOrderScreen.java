package wrapper;

import javafx.scene.layout.BorderPane;
import javafx.fxml.FXMLLoader;
import db.entity.*;
import adapter.base.ControlAdapter;
import java.util.HashSet;
import widgets.table.Table;
import application.Main;
import controls.*;
import annotations.AutoGenerated;
import java.util.HashMap;
import javafx.scene.Parent;
import sceneswitch.SceneBase;
import java.util.Map;
import java.util.Collection;
import table.MfTable;
import widgets.table.*;
import client.IClient;

import javafx.scene.Scene;
import javafx.scene.control.*;
import action.*;
import db.interfaces.IEntity;
import javafx.scene.image.ImageView;
import java.util.Set;
import javafx.scene.text.Text;

@AutoGenerated
public class HomeHeatingNewOrderScreen extends SceneBase {

	public HomeHeatingNewOrderScreen(ISceneSwitcher sceneSwitcher, IClient client) throws Exception {
		super(sceneSwitcher, client);
		initialize();
	}

	public void initialize() throws Exception {
		Parent root = FXMLLoader.load(Main.class.getResource("HomeHeatingNewOrderScreen.fxml"));
		_scene = new Scene(root);

		//scene switchers
		MfImageView mainMenuCustomerScreenControl = new MfImageView((ImageView) _scene.lookup("#scene$MainMenuCustomerScreen"));
		mainMenuCustomerScreenControl.addEvent((event) -> { _switcher.switchScene("MainMenuCustomerScreen"); });

		MfImageView homeHeatingOrderDetailsScreenControl = new MfImageView((ImageView) _scene.lookup("#scene$HomeHeatingOrderDetailsScreen"));
		homeHeatingOrderDetailsScreenControl.addEvent((event) -> { _switcher.switchScene("HomeHeatingOrderDetailsScreen"); });

		//entities instantiation
		HomeHeatingOrder homeHeatingOrder = new HomeHeatingOrder();

		//controls instantiation
		MfTextField amountControl = new MfTextField((TextField) _scene.lookup("#table$home_heating_order$amount"));
		MfCheckBox orderUrgencyEnumControlRegular = new MfCheckBox((CheckBox) _scene.lookup("#table$home_heating_order$order_urgency_enum$$regular"));
		MfCheckBox orderUrgencyEnumControlExpress = new MfCheckBox((CheckBox) _scene.lookup("#table$home_heating_order$order_urgency_enum$$express"));
		MfText pricePerLiterControl = new MfText((Text) _scene.lookup("#table$home_heating_order$price_per_liter"));
		MfText totalPriceControl = new MfText((Text) _scene.lookup("#table$home_heating_order$total_price"));

		//fields initializations
		amountControl.setField(homeHeatingOrder.getClass().getDeclaredField("_amount"));
		amountControl.setEntity(homeHeatingOrder);

		orderUrgencyEnumControlRegular.setField(homeHeatingOrder.getClass().getDeclaredField("_order_urgency_enum"));
		orderUrgencyEnumControlRegular.setEntity(homeHeatingOrder);
		orderUrgencyEnumControlRegular.setValidValue(_client.getEnum("order_urgency_enum", "regular"));

		orderUrgencyEnumControlExpress.setField(homeHeatingOrder.getClass().getDeclaredField("_order_urgency_enum"));
		orderUrgencyEnumControlExpress.setEntity(homeHeatingOrder);
		orderUrgencyEnumControlExpress.setValidValue(_client.getEnum("order_urgency_enum", "express"));

		pricePerLiterControl.setField(homeHeatingOrder.getClass().getDeclaredField("_price_per_liter"));
		pricePerLiterControl.setEntity(homeHeatingOrder);

		totalPriceControl.setField(homeHeatingOrder.getClass().getDeclaredField("_total_price"));
		totalPriceControl.setEntity(homeHeatingOrder);

		//grouping
		groupControls(new ControlAdapter[] { orderUrgencyEnumControlRegular, orderUrgencyEnumControlExpress });

	}
	private Map<IEntity, Map<String, String>> prepareQuery(StationManagerReports stationManagerReports) {
		Map<IEntity, Map<String, String>> map = new HashMap<IEntity, Map<String, String>>();
		
		Map<String, String> queryMap = new HashMap<String, String>();
		
		map.put(stationManagerReports, queryMap);
		return map;
	}
}
