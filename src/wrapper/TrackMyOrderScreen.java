package wrapper;

import javafx.scene.layout.BorderPane;
import javafx.fxml.FXMLLoader;
import adapter.base.ControlAdapter;
import java.util.HashSet;
import widgets.table.Table;
import controls.*;
import annotations.AutoGenerated;
import java.util.HashMap;
import javafx.scene.Parent;
import sceneswitch.SceneBase;
import table.MfTable;
import widgets.table.*;
import javafx.scene.Scene;
import javafx.scene.control.*;
import action.*;
import db.interfaces.IEntity;
import javafx.scene.image.ImageView;
import java.util.Set;
import javafx.scene.text.Text;

@AutoGenerated
public class TrackMyOrderScreen extends SceneBase {

	public TrackMyOrderScreen(ISceneSwitcher sceneSwitcher) {
		super(sceneSwitcher);
	}

	public void initialize() {
		Parent root = FXMLLoader.load(getClass().getResource("TrackMyOrderScreen.fxml"));
		_scene = new Scene(root);

		//entities instantiation
		HomeHeatingOrder homeHeatingOrder = new HomeHeatingOrder();

		//controls instantiation
		MfTextField orderIdControl = new MfTextField((TextField) _scene.lookup("#table$home_heating_order$order_id"));
		MfProgressBar statusControl = new MfProgressBar((ProgressBar) _scene.lookup("#table$home_heating_order$status"));
		MfText orderIdControl = new MfText((Text) _scene.lookup("#table$home_heating_order$order_id"));
		MfText statusControl = new MfText((Text) _scene.lookup("#table$home_heating_order$status"));

		//initializations
		MfHyperlink mainMenuCustomerScreenControl = new MfHyperlink((Hyperlink) _scene.lookup("#scene$MainMenuCustomerScreen"));
		mainMenuCustomerScreenControl.addEvent((event) -> { _switcher.switchScene("MainMenuCustomerScreen"); });
		MfImageView mainMenuCustomerScreenControl = new MfImageView((ImageView) _scene.lookup("#scene$MainMenuCustomerScreen"));
		mainMenuCustomerScreenControl.addEvent((event) -> { _switcher.switchScene("MainMenuCustomerScreen"); });
		MfImageView homeHeatingOrderControl = new MfImageView((ImageView) _scene.lookup("#action$collect$home_heating_order"));
		ActionControl collectAction = new ActionControl();
		collectAction.setControl(homeHeatingOrderControl);
		CollectCapability homeHeatingOrderCollectCapability = new CollectCapability();
		collectAction.addCapability(homeHeatingOrderCollectCapability);
		collectAction.setCallback((response) -> {});
		MfHyperlink homeHeatingOrderControl = new MfHyperlink((Hyperlink) _scene.lookup("#action$collect$home_heating_order"));
		ActionControl collectAction = new ActionControl();
		collectAction.setControl(homeHeatingOrderControl);
		CollectCapability homeHeatingOrderCollectCapability = new CollectCapability();
		collectAction.addCapability(homeHeatingOrderCollectCapability);
		collectAction.setCallback((response) -> {});
		MfHyperlink homeHeatingOrderControl = new MfHyperlink((Hyperlink) _scene.lookup("#action$remove$home_heating_order"));
		ActionControl removeAction = new ActionControl();
		removeAction.setControl(homeHeatingOrderControl);
		RemoveCapability homeHeatingOrderRemoveCapability = new RemoveCapability();
		homeHeatingOrderRemoveCapability.addEntity(homeHeatingOrder);
		removeAction.addCapability(homeHeatingOrderRemoveCapability);
		removeAction.setCallback((response) -> {});
		BorderPane homeHeatingOrderBp = (BorderPane) _scene.lookup("#uitable$noneditable$single$home_heating_order");
		Table<HomeHeatingOrder> homeHeatingOrderTableWrapper = new Table<HomeHeatingOrder>();
		MfTable<HomeHeatingOrder> homeHeatingOrderTable = new MfTable<HomeHeatingOrder>(HomeHeatingOrder.class);
		homeHeatingOrderTable.setEditable(false);
		MfSingleCapability<HomeHeatingOrder> homeHeatingOrderSingleCapability = new MfSingleCapability<HomeHeatingOrder>();
		homeHeatingOrderTableWrapper.addCapability(homeHeatingOrderSingleCapability);
		homeHeatingOrderTableWrapper.setTable(homeHeatingOrderTable);
		homeHeatingOrderBp.setCenter(homeHeatingOrderTable.getInstance());

		//fields initializations
		orderIdControl.setField(homeHeatingOrder.getClass().getField("_order_id"));
		orderIdControl.setEntity(homeHeatingOrder);

		statusControl.setField(homeHeatingOrder.getClass().getField("_status"));
		statusControl.setEntity(homeHeatingOrder);

		orderIdControl.setField(homeHeatingOrder.getClass().getField("_order_id"));
		orderIdControl.setEntity(homeHeatingOrder);

		statusControl.setField(homeHeatingOrder.getClass().getField("_status"));
		statusControl.setEntity(homeHeatingOrder);

		//grouping
		groupControls(new ControlAdapter[] { statusControl, statusControl });
		groupControls(new ControlAdapter[] { orderIdControl, orderIdControl });
	}

}
