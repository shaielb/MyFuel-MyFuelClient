package wrapper;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import action.ActionControl;
import action.FilterCapability;
import action.UpdateCapability;
import annotations.AutoGenerated;
import application.Main;
import client.IClient;
import controls.MfComboBox;
import controls.MfImageView;
import controls.MfListView;
import controls.MfNumberField;
import controls.MfText;
import db.entity.Car;
import db.entity.Customer;
import db.entity.Person;
import db.entity.PricingModelEnum;
import db.interfaces.IEntity;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.ComboBox;
import javafx.scene.control.ListView;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.scene.text.Text;
import messages.QueryContainer;
import sceneswitch.Context;
import sceneswitch.ISceneSwitcher;
import sceneswitch.SceneBase;

@AutoGenerated
public class PricingModelMatchingScreen extends SceneBase {

	private Customer _customer;
	private Car _car;
	private PricingModelEnum _pricingModelEnum;
	private Person _person;

	private MfNumberField _customerIdControl;
	private MfListView _plateNumberControl;
	private MfImageView _mainMenuMarketingScreenControl;
	private MfImageView _updatePricingModelEnumControl;
	private ActionControl _pricingModelEnumupdateAction;
	private MfText _firstNameControl;
	private MfText _emailControl;
	private MfText _phoneNumberControl;
	private MfImageView _filterCustomerControl;
	private ActionControl _customerfilterAction;
	private MfComboBox _modelTypeKeyControl;

	public PricingModelMatchingScreen(ISceneSwitcher sceneSwitcher, IClient client, Context context) throws Exception {
		super(sceneSwitcher, client, context);
	}

	@Override
	public void initialize() throws Exception {
		Parent root = FXMLLoader.load(Main.class.getResource("PricingModelMatchingScreen.fxml"));
		_scene = new Scene(root);

		//scene switchers
		_mainMenuMarketingScreenControl = new MfImageView((ImageView) _scene.lookup("#scene$MainMenuMarketingScreen"));
		_mainMenuMarketingScreenControl.addEvent((event) -> { _switcher.switchScene("MainMenuMarketingScreen"); });

		//entities instantiation
		if (_customer == null) {
			_customer = new Customer();
		}
		if (_car == null) {
			_car = new Car();
		}
		if (_pricingModelEnum == null) {
			_pricingModelEnum = new PricingModelEnum();
		}
		if (_person == null) {
			_person = new Person();
		}

		//entities assignments
		_car.setCustomer(_customer);
		_customer.setPerson(_person);
		_customer.setPricingModelEnum(_pricingModelEnum);

		//controls instantiation
		_customerIdControl = new MfNumberField((TextField) _scene.lookup("#table$customer$customer_id"), Integer.class);
		_plateNumberControl = new MfListView((ListView) _scene.lookup("#table$customer$car$plate_number"));
		_firstNameControl = new MfText((Text) _scene.lookup("#table$customer$person$first_name"));
		_emailControl = new MfText((Text) _scene.lookup("#table$customer$person$email"));
		_phoneNumberControl = new MfText((Text) _scene.lookup("#table$customer$person$phone_number"));
		_modelTypeKeyControl = new MfComboBox((ComboBox) _scene.lookup("#table$customer$pricing_model_enum$model_type_key"));

		//initializations
		_updatePricingModelEnumControl = new MfImageView((ImageView) _scene.lookup("#action$update$customer$pricing_model_enum"));
		_updatePricingModelEnumControl.
			setMouseImages("@resource/images/SaveChanges_btn.png", "@resource/images/SaveChanges_overbtn.png", "@resource/images/SaveChanges_clickbtn.png");
		_pricingModelEnumupdateAction = new ActionControl();
		_pricingModelEnumupdateAction.setControl(_updatePricingModelEnumControl);
		UpdateCapability pricingModelEnumUpdateCapability = new UpdateCapability();
		Set<IEntity> pricingModelEnumUpdateEntities = new HashSet<IEntity>();
		pricingModelEnumUpdateCapability.setEntities(pricingModelEnumUpdateEntities);
		_pricingModelEnumupdateAction.addCapability(pricingModelEnumUpdateCapability);
		_pricingModelEnumupdateAction.setClient(_client);
		_pricingModelEnumupdateAction.setPreSend((request) -> {

			return true;
		});
		_pricingModelEnumupdateAction.setCallback((response) -> {
			
		});

		_filterCustomerControl = new MfImageView((ImageView) _scene.lookup("#action$collect$customer"));
		_filterCustomerControl.
			setMouseImages("@resource/images/Search_btn.png", "@resource/images/Search_overbtn.png", "@resource/images/Search_clickbtn.png");
		_customerfilterAction = new ActionControl();
		_customerfilterAction.setControl(_filterCustomerControl);
		FilterCapability customerFilterCapability = new FilterCapability();
		customerFilterCapability.setQueryContainers(prepareQuery(_customer));
		_customerfilterAction.addCapability(customerFilterCapability);
		_customerfilterAction.setClient(_client);
		_customerfilterAction.setPreSend((request) -> {

			return true;
		});
		_customerfilterAction.setCallback((response) -> {
			Collection<IEntity> entities = response.getEntities();
			for (IEntity ientity : entities) {
				Customer entity = (Customer) ientity;
			}
		});

		//fields initializations
		_customerIdControl.setField(_customer.getClass().getDeclaredField("_customer_id"));
		_customerIdControl.setEntity(_customer);

		_plateNumberControl.setField(_car.getClass().getDeclaredField("_plate_number"));
		_plateNumberControl.setEntity(_car);

		_firstNameControl.setField(_person.getClass().getDeclaredField("_first_name"));
		_firstNameControl.setEntity(_person);

		_emailControl.setField(_person.getClass().getDeclaredField("_email"));
		_emailControl.setEntity(_person);

		_phoneNumberControl.setField(_person.getClass().getDeclaredField("_phone_number"));
		_phoneNumberControl.setEntity(_person);

		_modelTypeKeyControl.setField(_pricingModelEnum.getClass().getDeclaredField("_model_type_key"));
		_modelTypeKeyControl.setEntity(_pricingModelEnum);


	}

	@Override
	protected void onLoad() {
		
	}

	@Override
	public void setParameters(IEntity[] entities) {
		super.setParameters(entities);
	}

	private List<QueryContainer> prepareQuery(Customer customer) {
		List<QueryContainer> containers = new ArrayList<QueryContainer>();
		
		Map<String, String> queryMap = new HashMap<String, String>();
		
		QueryContainer container = new QueryContainer();
		container.setQueryEntity(customer);
		container.setQueryMap(queryMap);
		containers.add(container);
		return containers;
	}

	public Customer getCustomer() {
		 return _customer;
	}

	public void setCustomer(Customer customer) {
		 _customer = customer;
	}

	public Car getCar() {
		 return _car;
	}

	public void setCar(Car car) {
		 _car = car;
	}

	public Person getPerson() {
		 return _person;
	}

	public void setPerson(Person person) {
		 _person = person;
	}

	public PricingModelEnum getPricingModelEnum() {
		 return _pricingModelEnum;
	}

	public void setPricingModelEnum(PricingModelEnum pricingModelEnum) {
		 _pricingModelEnum = pricingModelEnum;
	}
}
