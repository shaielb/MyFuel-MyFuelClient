package wrapper;

import java.io.IOException;
import java.util.Collection;
import java.util.HashSet;
import java.util.Set;

import action.ActionControl;
import action.UpdateCapability;
import annotations.AutoGenerated;
import application.Main;
import client.IClient;
import controls.MfImageView;
import controls.MfNumberField;
import controls.MfText;
import db.entity.FuelEnum;
import db.entity.StationsFuel;
import db.interfaces.IEntity;
import enums.Enums;
import handler.UiHandler;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.scene.text.Text;
import messages.QueryContainer;
import messages.request.IFilter;
import messages.response.ResponseEvent;
import sceneswitch.Context;
import sceneswitch.ISceneSwitcher;
import sceneswitch.SceneBase;
import utilities.StringUtil;

@AutoGenerated
public class FuelThresholdLevelScreen extends SceneBase {

	private FuelEnum _fuelEnum;
	private StationsFuel _stationsFuelMotorcycleFuel;
	private StationsFuel _stationsFuelSolerFuel;
	private StationsFuel _stationsFuelBenzinFuel;
	private StationsFuel _stationsFuel;

	private MfNumberField _fuelLowLevelControlMotorcycleFuelLowLevelTf;
	private MfNumberField _fuelLowLevelControlSolerFuelLowLevelTf;
	private MfNumberField _fuelLowLevelControlBenzinFuelLowLevelTf;
	private MfImageView _updateStationsFuelControl;
	private ActionControl _stationsFuelupdateAction;
	private MfImageView _mainMenuStationManagerScreenControl;
	private MfText _fuelLowLevelControlMotorcycleFuelLowLevel;
	private MfText _currentAmountControlMotorcycleCurrentAmount;
	private MfText _fuelLowLevelControlSolerFuelLowLevel;
	private MfText _currentAmountControlSolerCurrentAmount;
	private MfText _fuelLowLevelControlBenzinFuelLowLevel;
	private MfText _currentAmountControlBenzinCurrentAmount;
	private MfText _stationNameControl;

	private Set<IEntity> _stationsFuelUpdateEntities;

	public FuelThresholdLevelScreen(ISceneSwitcher sceneSwitcher, IClient client, Context context) throws Exception {
		super(sceneSwitcher, client, context);
	}

	@Override
	public void initialize() throws Exception {
		Parent root = FXMLLoader.load(Main.class.getResource("FuelThresholdLevelScreen.fxml"));
		_scene = new Scene(root);

		//scene switchers
		_mainMenuStationManagerScreenControl = new MfImageView((ImageView) _scene.lookup("#scene$MainMenuStationManagerScreen"));
		_mainMenuStationManagerScreenControl.addEvent((event) -> { _switcher.switchScene("MainMenuStationManagerScreen"); });

		//entities instantiation
		if (_fuelEnum == null) {
			_fuelEnum = new FuelEnum();
		}
		if (_stationsFuelMotorcycleFuel == null) {
			_stationsFuelMotorcycleFuel = new StationsFuel();
		}
		if (_stationsFuelSolerFuel == null) {
			_stationsFuelSolerFuel = new StationsFuel();
		}
		if (_stationsFuelBenzinFuel == null) {
			_stationsFuelBenzinFuel = new StationsFuel();
		}
		if (_stationsFuel == null) {
			_stationsFuel = new StationsFuel();
		}

		_stationsFuelBenzinFuel.setStation(_context.getEmployee().getStation());
		_stationsFuelSolerFuel.setStation(_context.getEmployee().getStation());
		_stationsFuelMotorcycleFuel.setStation(_context.getEmployee().getStation());

		//entities assignments
		_stationsFuelMotorcycleFuel.setFuelEnum(_fuelEnum);
		_stationsFuelSolerFuel.setFuelEnum(_fuelEnum);
		_stationsFuelBenzinFuel.setFuelEnum(_fuelEnum);

		//controls instantiation
		_fuelLowLevelControlMotorcycleFuelLowLevelTf = new MfNumberField((TextField) _scene.lookup("#table$stations_fuel$fuel_enum$$$motorcycle$fuel_low_level$$$tf"), Double.class);
		_fuelLowLevelControlSolerFuelLowLevelTf = new MfNumberField((TextField) _scene.lookup("#table$stations_fuel$fuel_enum$$$soler$fuel_low_level$$$tf"), Double.class);
		_fuelLowLevelControlBenzinFuelLowLevelTf = new MfNumberField((TextField) _scene.lookup("#table$stations_fuel$fuel_enum$$$benzin$fuel_low_level$$$tf"), Double.class);
		_fuelLowLevelControlMotorcycleFuelLowLevel = new MfText((Text) _scene.lookup("#table$stations_fuel$fuel_enum$$$motorcycle$fuel_low_level"));
		_currentAmountControlMotorcycleCurrentAmount = new MfText((Text) _scene.lookup("#table$stations_fuel$fuel_enum$$$motorcycle$current_amount"));
		_fuelLowLevelControlSolerFuelLowLevel = new MfText((Text) _scene.lookup("#table$stations_fuel$fuel_enum$$$soler$fuel_low_level"));
		_currentAmountControlSolerCurrentAmount = new MfText((Text) _scene.lookup("#table$stations_fuel$fuel_enum$$$soler$current_amount"));
		_fuelLowLevelControlBenzinFuelLowLevel = new MfText((Text) _scene.lookup("#table$stations_fuel$fuel_enum$$$benzin$fuel_low_level"));
		_currentAmountControlBenzinCurrentAmount = new MfText((Text) _scene.lookup("#table$stations_fuel$fuel_enum$$$benzin$current_amount"));
		_stationNameControl = new MfText((Text) _scene.lookup("#context$employee$station$station_name"));

		//initializations
		_updateStationsFuelControl = new MfImageView((ImageView) _scene.lookup("#action$update$stations_fuel"));
		_updateStationsFuelControl.
		setMouseImages("@resource/images/Commit_btn.png", "@resource/images/Commit_overbtn.png", "@resource/images/Commit_clickbtn.png");
		_stationsFuelupdateAction = new ActionControl();
		_stationsFuelupdateAction.setControl(_updateStationsFuelControl);
		UpdateCapability stationsFuelUpdateCapability = new UpdateCapability();
		_stationsFuelUpdateEntities = new HashSet<IEntity>();
		_stationsFuelUpdateEntities.add(_stationsFuelMotorcycleFuel);
		_stationsFuelUpdateEntities.add(_stationsFuelSolerFuel);
		_stationsFuelUpdateEntities.add(_stationsFuelBenzinFuel);
		stationsFuelUpdateCapability.setEntities(_stationsFuelUpdateEntities);
		_stationsFuelupdateAction.addCapability(stationsFuelUpdateCapability);
		_stationsFuelupdateAction.setClient(_client);
		_stationsFuelupdateAction.setPreSend((request) -> {
			Double motorcycleLowLevel = null;
			if (!StringUtil.isEmpty(((TextField) _fuelLowLevelControlMotorcycleFuelLowLevelTf.getInstance()).getText())) {
				motorcycleLowLevel = (Double) _fuelLowLevelControlMotorcycleFuelLowLevelTf.getValue();
			}
			Double solerLowLevel = null;
			if (!StringUtil.isEmpty(((TextField) _fuelLowLevelControlSolerFuelLowLevelTf.getInstance()).getText())) {
				solerLowLevel = (Double) _fuelLowLevelControlSolerFuelLowLevelTf.getValue();
			}
			Double benzinLowLevel = null;
			if (!StringUtil.isEmpty(((TextField) _fuelLowLevelControlBenzinFuelLowLevelTf.getInstance()).getText())) {
				benzinLowLevel = (Double) _fuelLowLevelControlBenzinFuelLowLevelTf.getValue();
			}

			if ((motorcycleLowLevel != null && motorcycleLowLevel < _stationsFuelMotorcycleFuel.getCurrentAmount()) ||
					(solerLowLevel != null && solerLowLevel < _stationsFuelSolerFuel.getCurrentAmount()) ||
					(benzinLowLevel != null && benzinLowLevel < _stationsFuelBenzinFuel.getCurrentAmount())) {
				UiHandler.showAlert(AlertType.ERROR, "Fuel Low Level Update", "", "Fuel Low Level Must Be Greater Than The Current Amount");
				return false;
			}

			_stationsFuelMotorcycleFuel.setFuelLowLevel((Double) _fuelLowLevelControlMotorcycleFuelLowLevelTf.getValue());
			_stationsFuelSolerFuel.setFuelLowLevel((Double) _fuelLowLevelControlSolerFuelLowLevelTf.getValue());
			_stationsFuelBenzinFuel.setFuelLowLevel((Double) _fuelLowLevelControlBenzinFuelLowLevelTf.getValue());
			return true;
		});
		_stationsFuelupdateAction.setCallback((response) -> {
			if (response.isPassed()) {
				UiHandler.showAlert(AlertType.INFORMATION, "Fuel Low Level Update", "", "Fuel Low Level Was Updated");
				try {
					_fuelLowLevelControlMotorcycleFuelLowLevel.update();
					_currentAmountControlMotorcycleCurrentAmount.update();
					_fuelLowLevelControlSolerFuelLowLevel.update();
					_currentAmountControlSolerCurrentAmount.update();
					_fuelLowLevelControlBenzinFuelLowLevel.update();
					_currentAmountControlBenzinCurrentAmount.update();
					_stationNameControl.update();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			else {
				UiHandler.showAlert(AlertType.ERROR, "Fuel Low Level Update", "", response.getDescription());
			}
		});

		//fields initializations
		StationsFuel sfm = new StationsFuel();
		_fuelLowLevelControlMotorcycleFuelLowLevelTf.setField(sfm.getClass().getDeclaredField("_fuel_low_level"));
		_fuelLowLevelControlMotorcycleFuelLowLevelTf.setEntity(sfm);

		_fuelLowLevelControlSolerFuelLowLevelTf.setField(sfm.getClass().getDeclaredField("_fuel_low_level"));
		_fuelLowLevelControlSolerFuelLowLevelTf.setEntity(sfm);

		_fuelLowLevelControlBenzinFuelLowLevelTf.setField(sfm.getClass().getDeclaredField("_fuel_low_level"));
		_fuelLowLevelControlBenzinFuelLowLevelTf.setEntity(sfm);

		_fuelLowLevelControlMotorcycleFuelLowLevel.setField(_stationsFuelMotorcycleFuel.getClass().getDeclaredField("_fuel_low_level"));
		_fuelLowLevelControlMotorcycleFuelLowLevel.setEntity(_stationsFuelMotorcycleFuel);

		_currentAmountControlMotorcycleCurrentAmount.setField(_stationsFuelMotorcycleFuel.getClass().getDeclaredField("_current_amount"));
		_currentAmountControlMotorcycleCurrentAmount.setEntity(_stationsFuelMotorcycleFuel);

		_fuelLowLevelControlSolerFuelLowLevel.setField(_stationsFuelSolerFuel.getClass().getDeclaredField("_fuel_low_level"));
		_fuelLowLevelControlSolerFuelLowLevel.setEntity(_stationsFuelSolerFuel);

		_currentAmountControlSolerCurrentAmount.setField(_stationsFuelSolerFuel.getClass().getDeclaredField("_current_amount"));
		_currentAmountControlSolerCurrentAmount.setEntity(_stationsFuelSolerFuel);

		_fuelLowLevelControlBenzinFuelLowLevel.setField(_stationsFuelBenzinFuel.getClass().getDeclaredField("_fuel_low_level"));
		_fuelLowLevelControlBenzinFuelLowLevel.setEntity(_stationsFuelBenzinFuel);

		_currentAmountControlBenzinCurrentAmount.setField(_stationsFuelBenzinFuel.getClass().getDeclaredField("_current_amount"));
		_currentAmountControlBenzinCurrentAmount.setEntity(_stationsFuelBenzinFuel);

		_stationNameControl.setField(_context.getEmployee().getStation().getClass().getDeclaredField("_station_name"));
		_stationNameControl.setEntity(_context.getEmployee().getStation());
	}

	@Override
	protected void onLoad() throws IOException {
		IFilter filterRequest = _client.getFilterRequest();
		_stationsFuel.setStation(_context.getEmployee().getStation());
		QueryContainer stationFuelContainer = new QueryContainer(_stationsFuel);
		stationFuelContainer.addQueryCondition("station_fk", "=");
		filterRequest.addQueryContainer(stationFuelContainer);
		ResponseEvent responseEvent = _client.sendRequest(filterRequest);
		responseEvent.continueWith((response) -> {
			if (response.isPassed()) {
				Collection<StationsFuel> entities = response.getEntitiesAsType();
				for (StationsFuel entity : entities) {
					if (entity.getFuelEnum().getFuelTypeKey().equals(Enums.Benzin)) {
						_stationsFuelBenzinFuel.setId(entity.getId());
						UiHandler.clone(entity, _stationsFuelBenzinFuel);
					}
					else if (entity.getFuelEnum().getFuelTypeKey().equals(Enums.Soler)) {
						_stationsFuelSolerFuel.setId(entity.getId());
						UiHandler.clone(entity, _stationsFuelSolerFuel);
					}
					else if (entity.getFuelEnum().getFuelTypeKey().equals(Enums.Motorcycles)) {
						_stationsFuelMotorcycleFuel.setId(entity.getId());
						UiHandler.clone(entity, _stationsFuelMotorcycleFuel);
					}
				}
				try {
					_fuelLowLevelControlMotorcycleFuelLowLevel.update();
					_currentAmountControlMotorcycleCurrentAmount.update();
					_fuelLowLevelControlSolerFuelLowLevel.update();
					_currentAmountControlSolerCurrentAmount.update();
					_fuelLowLevelControlBenzinFuelLowLevel.update();
					_currentAmountControlBenzinCurrentAmount.update();
					_stationNameControl.update();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			else {
				UiHandler.showAlert(AlertType.ERROR, "Stations Fueling", "", response.getDescription());
			}
		});
	}

	@Override
	public void setParameters(IEntity[] entities) {
		super.setParameters(entities);
	}

	public FuelEnum getFuelEnum() {
		return _fuelEnum;
	}

	public void setFuelEnum(FuelEnum fuelEnum) {
		_fuelEnum = fuelEnum;
	}
}
