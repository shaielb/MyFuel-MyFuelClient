package wrapper;

import javafx.scene.layout.BorderPane;
import javafx.fxml.FXMLLoader;
import db.entity.*;
import adapter.base.ControlAdapter;
import java.util.HashSet;
import widgets.table.Table;
import application.Main;
import controls.*;
import annotations.AutoGenerated;
import java.util.HashMap;
import javafx.scene.Parent;
import sceneswitch.SceneBase;
import java.util.Map;
import java.util.Collection;
import table.MfTable;
import widgets.table.*;
import client.IClient;

import javafx.scene.Scene;
import javafx.scene.control.*;
import action.*;
import db.interfaces.IEntity;
import javafx.scene.image.ImageView;
import java.util.Set;
import javafx.scene.text.Text;

@AutoGenerated
public class FuelThresholdLevelScreen extends SceneBase {

	public FuelThresholdLevelScreen(ISceneSwitcher sceneSwitcher, IClient client) throws Exception {
		super(sceneSwitcher, client);
		initialize();
	}

	public void initialize() throws Exception {
		Parent root = FXMLLoader.load(Main.class.getResource("FuelThresholdLevelScreen.fxml"));
		_scene = new Scene(root);

		//scene switchers
		MfImageView mainMenuStationManagerScreenControl = new MfImageView((ImageView) _scene.lookup("#scene$MainMenuStationManagerScreen"));
		mainMenuStationManagerScreenControl.addEvent((event) -> { _switcher.switchScene("MainMenuStationManagerScreen"); });

		//entities instantiation
		Station station = new Station();
		StationsFuel stationsFuelMotorcyclesFuelLowLevel = new StationsFuel();
		FuelEnum fuelEnum = new FuelEnum();
		StationsFuel stationsFuelSolerFuelLowLevel = new StationsFuel();
		StationsFuel stationsFuelBenzinFuelLowLevel = new StationsFuel();
		StationsFuel stationsFuel = new StationsFuel();

		//entities assignments
		stationsFuelMotorcyclesFuelLowLevel.setStation(station);
		stationsFuelMotorcyclesFuelLowLevel.setFuelEnum(fuelEnum);
		stationsFuelSolerFuelLowLevel.setStation(station);
		stationsFuelSolerFuelLowLevel.setFuelEnum(fuelEnum);
		stationsFuelBenzinFuelLowLevel.setStation(station);
		stationsFuelBenzinFuelLowLevel.setFuelEnum(fuelEnum);

		//controls instantiation
		MfTextField fuelLowLevelControlMotorcyclesFuelLowLevel = new MfTextField((TextField) _scene.lookup("#table$station$stations_fuel$fuel_enum$$$motorcycles$fuel_low_level"));
		MfTextField fuelLowLevelControlSolerFuelLowLevel = new MfTextField((TextField) _scene.lookup("#table$station$stations_fuel$fuel_enum$$$soler$fuel_low_level"));
		MfTextField fuelLowLevelControlBenzinFuelLowLevel = new MfTextField((TextField) _scene.lookup("#table$station$stations_fuel$fuel_enum$$$benzin$fuel_low_level"));
		MfText fuelLowLevelControlTxt = new MfText((Text) _scene.lookup("#table$stations_fuel$fuel_low_level$$$txt"));
		MfText currentAmountControlTxt = new MfText((Text) _scene.lookup("#table$stations_fuel$current_amount$$$txt"));

		//initializations
		MfImageView updateStationsFuelControl = new MfImageView((ImageView) _scene.lookup("#action$update$station$stations_fuel"));
		ActionControl stationsFuelupdateAction = new ActionControl();
		stationsFuelupdateAction.setControl(updateStationsFuelControl);
		UpdateCapability stationsFuelUpdateCapability = new UpdateCapability();
		Set<IEntity> stationsFuelUpdateEntities = new HashSet<IEntity>();
		stationsFuelUpdateCapability.setEntities(stationsFuelUpdateEntities);
		stationsFuelupdateAction.addCapability(stationsFuelUpdateCapability);
		stationsFuelupdateAction.setClient(_client);
		stationsFuelupdateAction.setCallback((response) -> {
			
		});

		//fields initializations
		fuelLowLevelControlMotorcyclesFuelLowLevel.setField(stationsFuelMotorcyclesFuelLowLevel.getClass().getDeclaredField("_fuel_low_level"));
		fuelLowLevelControlMotorcyclesFuelLowLevel.setEntity(stationsFuelMotorcyclesFuelLowLevel);

		fuelLowLevelControlSolerFuelLowLevel.setField(stationsFuelSolerFuelLowLevel.getClass().getDeclaredField("_fuel_low_level"));
		fuelLowLevelControlSolerFuelLowLevel.setEntity(stationsFuelSolerFuelLowLevel);

		fuelLowLevelControlBenzinFuelLowLevel.setField(stationsFuelBenzinFuelLowLevel.getClass().getDeclaredField("_fuel_low_level"));
		fuelLowLevelControlBenzinFuelLowLevel.setEntity(stationsFuelBenzinFuelLowLevel);

		fuelLowLevelControlTxt.setField(stationsFuel.getClass().getDeclaredField("_fuel_low_level"));
		fuelLowLevelControlTxt.setEntity(stationsFuel);

		currentAmountControlTxt.setField(stationsFuel.getClass().getDeclaredField("_current_amount"));
		currentAmountControlTxt.setEntity(stationsFuel);

		fuelLowLevelControlTxt.setField(stationsFuel.getClass().getDeclaredField("_fuel_low_level"));
		fuelLowLevelControlTxt.setEntity(stationsFuel);

		currentAmountControlTxt.setField(stationsFuel.getClass().getDeclaredField("_current_amount"));
		currentAmountControlTxt.setEntity(stationsFuel);

		fuelLowLevelControlTxt.setField(stationsFuel.getClass().getDeclaredField("_fuel_low_level"));
		fuelLowLevelControlTxt.setEntity(stationsFuel);

		currentAmountControlTxt.setField(stationsFuel.getClass().getDeclaredField("_current_amount"));
		currentAmountControlTxt.setEntity(stationsFuel);

		//grouping
		groupControls(new ControlAdapter[] { fuelLowLevelControlMotorcyclesFuelLowLevel, fuelLowLevelControlSolerFuelLowLevel, fuelLowLevelControlBenzinFuelLowLevel });
		groupControls(new ControlAdapter[] { fuelLowLevelControlTxt, fuelLowLevelControlTxt, fuelLowLevelControlTxt });
		groupControls(new ControlAdapter[] { currentAmountControlTxt, currentAmountControlTxt, currentAmountControlTxt });

	}
	private Map<IEntity, Map<String, String>> prepareQuery(StationManagerReports stationManagerReports) {
		Map<IEntity, Map<String, String>> map = new HashMap<IEntity, Map<String, String>>();
		
		Map<String, String> queryMap = new HashMap<String, String>();
		
		map.put(stationManagerReports, queryMap);
		return map;
	}
}
